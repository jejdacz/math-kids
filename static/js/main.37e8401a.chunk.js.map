{"version":3,"sources":["components/Score/Score.component.jsx","components/App/createStore.js","components/App/createProblem.js","components/App/store.js","components/App/AppStates/Game.appState.jsx","components/CustomButton/CustomButton.component.jsx","components/MenuButton/MenuButton.component.jsx","components/App/AppStates/Over.appState.jsx","components/App/AppStates/Intro.appSate.jsx","components/App/AppStates/Error.appSate.jsx","components/GameButton/GameButton.component.jsx","components/Problem/Problem.component.jsx","components/App/App.js","serviceWorkerRegistration.js","reportWebVitals.js","theme.js","index.js"],"names":["Score","score","className","toFixed","createStore","reducer","initState","initStateFunc","state","listeners","subscribe","listener","console","log","push","filter","l","dispatch","action","forEach","getState","operations","limit","num1","Math","floor","random","num2","problem","answer","addUnique","fn","arr","item","includes","shuffle","a","b","createProblem","answersCount","operatorIndex","length","correctAnswer","answers","sort","gameStates","Object","freeze","intro","game","over","error","roundStates","init","loading","ready","running","stopped","success","fail","initialGlobalState","gameState","initScoreUnit","scoreUnitReducer","rounds","scoreUnit","round","roundState","problemSpec","problemOptions","getInitialGlobalState","store","type","payload","correct","Error","startGame","restartGame","checkAnswer","initRound","startRound","timer","setInterval","clearInterval","reduceScoreUnit","stopRound","finishRound","Game","React","memo","heading","useRef","useEffect","TweenLite","to","current","transform","setTimeout","answerPicked","displayName","StyledCustomButton","styled","button","props","theme","secondary","onSecondary","defaultProps","MenuButton","onClick","myTimeline","TimelineLite","ref","e","duration","ease","onComplete","Over","style","position","left","top","params","particlesConfig","Intro","buttonStates","clicked","StyledGameButton","onClickStart","onClickComplete","enabled","effect","useState","setState","gbref","clickTimeline","useMemo","paused","addLabel","delay","rotation","call","tl","play","x","yoyo","repeat","set","kill","eventCallback","Problem","buttonsEnabled","map","i","createButtons","App","unsubscribe","renderContent","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","primary","bacground","onPrimary","onBackground","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.37e8401a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Score.styles.scss';\n\nconst Score = ({ score, className }) => {\n  return (\n    <div className={`${className ? className : ''} score-container`}>\n      <h2 className='score'>{score.toFixed(1)}</h2>\n      <h2 className='score-title'>score</h2>\n    </div>\n  );\n};\n\nexport default Score;\n","const createStore = (reducer, initState, initStateFunc) => {\n  let state = initStateFunc ? initStateFunc(initState) : initState;\n  let listeners = [];\n\n  const getState = () => state;\n\n  const dispatch = action => {\n    //console.log('dispatched', action);\n    state = reducer(state, action);\n    listeners.forEach(listener => listener());\n    return action;\n  };\n\n  const subscribe = listener => {\n    console.log('listener added');\n    listeners.push(listener);\n    return () => listeners.filter(l => listener !== l);\n  };\n\n  return { subscribe, dispatch, getState };\n};\n\nexport default createStore;\n","const createSustraction = limit => {\n  const num1 = Math.floor(Math.random() * limit);\n  const num2 = Math.floor(Math.random() * limit);\n  const problem = `${num1} + ${num2}`;\n  const answer = num1 + num2;\n  return {\n    problem,\n    answer\n  };\n};\n\nconst createAddition = limit => {\n  const num1 = Math.floor(Math.random() * limit);\n  const num2 = Math.floor(Math.random() * limit);\n  const problem = `${num1 + num2} - ${num1}`;\n  const answer = num2;\n  return {\n    problem,\n    answer\n  };\n};\n\nconst operations = [createAddition, createSustraction];\n\nconst createBadAnswer = answer => {\n  const num = Math.floor(Math.random() * 10);\n  return num;\n};\n\nconst addUnique = (fn, arr) => {\n  const item = fn();\n  return arr.includes(item) ? addUnique(fn, arr) : [...arr, item];\n};\n\n// array sort function to shuffle values\nconst shuffle = (a, b) => 0.5 - Math.random();\n\nconst createProblem = ({ answersCount, limit }) => {\n  const operatorIndex = Math.floor(Math.random() * operations.length);\n\n  const { problem, answer: correctAnswer } = operations[operatorIndex](limit);\n\n  // create array of given length with random numbers\n  let answers = [correctAnswer];\n\n  while (answers.length < answersCount) {\n    answers = addUnique(() => createBadAnswer(correctAnswer), answers);\n  }\n\n  answers = answers.sort(shuffle);\n\n  return {\n    problem,\n    correctAnswer,\n    answers\n  };\n};\n\nexport default createProblem;\n","import createStore from './createStore';\nimport createProblem from './createProblem';\n\nexport const gameStates = Object.freeze({\n  intro: 'intro',\n  game: 'game',\n  over: 'over',\n  error: 'error'\n});\n\nexport const roundStates = Object.freeze({\n  init: 'init', // components hidden\n  loading: 'loading', // showing components\n  ready: 'ready', // components ready\n  running: 'running', // timer started\n  stopped: 'stopped', // timer stopped\n  success: 'success', // animation of result\n  fail: 'fail', // animation of result\n  over: 'over' // round is over\n});\n\nconst initialGlobalState = {\n  gameState: gameStates.intro,\n  initScoreUnit: 10,\n  scoreUnitReducer: 0.98,\n  rounds: 10,\n  score: 0,\n  scoreUnit: 10,\n  round: 1,\n  roundState: roundStates.init,\n  problemSpec: {},\n  problemOptions: { answersCount: 4, limit: 10 }\n};\n\nconst getInitialGlobalState = init => ({\n  ...init,\n  problemSpec: createProblem(init.problemOptions)\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'startGame':\n      return { ...state, gameState: gameStates.game };\n    case 'restartGame':\n      return {\n        ...getInitialGlobalState(initialGlobalState),\n        gameState: gameStates.game\n      };\n    case 'stopRound':\n      return { ...state, roundState: roundStates.stopped };\n    case 'checkAnswer':\n      console.log(action.payload);\n      const { correct } = action.payload;\n      return {\n        ...state,\n        ...(correct && { score: state.score + state.scoreUnit }),\n        ...(correct\n          ? { roundState: roundStates.success }\n          : { roundState: roundStates.fail })\n      };\n    case 'initRound':\n      return {\n        ...state,\n        round: state.round + 1,\n        roundState: roundStates.init,\n        scoreUnit: state.initScoreUnit,\n        problemSpec: createProblem(state.problemOptions)\n      };\n\n    case 'startRound':\n      return { ...state, roundState: roundStates.running };\n    case 'finishRound':\n      return {\n        ...state,\n        roundState: roundStates.over,\n        ...(state.round === state.rounds && {\n          gameState: gameStates.over\n        })\n      };\n    case 'reduceScoreUnit':\n      return { ...state, scoreUnit: state.scoreUnit * state.scoreUnitReducer };\n\n    default:\n      throw Error('action type not defined');\n  }\n};\n\n/*** store ***/\n\nexport const store = createStore(\n  reducer,\n  initialGlobalState,\n  getInitialGlobalState\n);\n\nconst { dispatch, getState } = store;\n\n/* actions */\n\nexport const startGame = () => dispatch({ type: 'startGame' });\nexport const restartGame = () => dispatch({ type: 'restartGame' });\nexport const checkAnswer = payload =>\n  dispatch({ type: 'checkAnswer', payload });\nexport const initRound = () => dispatch({ type: 'initRound' });\nexport const startRound = () => {\n  dispatch({ type: 'startRound' });\n  const timer = setInterval(() => {\n    getState().roundState !== roundStates.running\n      ? clearInterval(timer)\n      : reduceScoreUnit();\n  }, 100);\n};\nexport const stopRound = () => dispatch({ type: 'stopRound' });\nexport const finishRound = () => dispatch({ type: 'finishRound' });\nexport const reduceScoreUnit = () => {\n  dispatch({ type: 'reduceScoreUnit' });\n};\n","import React, { useEffect, useRef } from 'react';\nimport Score from '../../Score/Score.component';\nimport { TweenLite } from 'gsap';\nimport { gameStates, roundStates } from '../store';\n\nconst Game = React.memo(\n  ({\n    score,\n    scoreUnit,\n    roundState,\n    gameState,\n    problem,\n    startRound,\n    finishRound,\n    initRound\n  }) => {\n    const heading = useRef(null);\n\n    // TweenLite test\n\n    useEffect(() => {\n      TweenLite.to(heading.current, 5, {\n        transform: 'scale(0.85)'\n      });\n    }, [gameState]);\n\n    // round state transitions\n\n    useEffect(() => {\n      if (roundState === roundStates.init) {\n        console.log('roundstate - init');\n        // setScoreUnit(initScoreUnit);\n        // stopCountdown();\n        // setProblemSpec(createProblem(problemOptions));\n        setTimeout(() => startRound(), 500);\n      }\n\n      if (roundState === roundStates.loading) {\n        console.log('roundstate - loading');\n        // setTimeout(() => setRoundState(roundStates.running), 1000);\n      }\n\n      if (roundState === roundStates.running) {\n        console.log('roundstate - running');\n        // startCountdown();\n      }\n\n      if (roundState === roundStates.answerPicked) {\n        console.log('roundstate - answer picked');\n        //setTimeout(() => finishRound(), 3000);\n        // stopCountdown();\n      }\n\n      if (roundState === roundStates.fail) {\n        console.log('roundstate - fail');\n        setTimeout(() => finishRound(), 1000);\n        // setTimeout(() => setRoundState(roundStates.over), 1000);\n      }\n\n      if (roundState === roundStates.success) {\n        console.log('roundstate - success');\n        setTimeout(() => finishRound(), 2000);\n        // setTimeout(() => setRoundState(roundStates.over), 1000);\n      }\n\n      if (roundState === roundStates.over && gameState === gameStates.game) {\n        console.log('roundstate - over');\n        setTimeout(() => initRound(), 500);\n      }\n    }, [roundState, gameState]);\n\n    return (\n      <div className='app game'>\n        {problem}\n        <h2 className='score-unit'>{scoreUnit.toFixed(2)}</h2>\n        <Score score={score} />\n      </div>\n    );\n  }\n);\n\nGame.displayName = 'Game';\n\nexport default Game;\n","import React from 'react';\nimport styled from 'styled-components';\n/*\nconst CustomButton = React.forwardRef((props, ref) => (\n  <button ref={ref} {...props}></button>\n));\nconst CustomButton = React.forwardRef((props, ref) => (\n  <button ref={ref} {...props}></button>\n));*/\n/* styled components\n\n  cons:\n    no ide hints\n    no scss functions (darken) ----> could be replace by JS function\n\n  pros:\n    one file\n    css unique class id\n\n  ********************\n\n  theming:\n    theme imported in index.js and provided by ThemeProvider from styled-components lib\n*/\n\nconst StyledCustomButton = styled.button`\n  font: inherit;\n  font-size: 1.7rem;\n  padding: 1.2rem 1.8rem;\n  border: 0;\n  background-color: ${props => props.theme.secondary};\n  color: ${props => props.theme.onSecondary};\n  outline: 0;\n  border-radius: 0.5rem;\n  text-align: center;\n  user-select: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nStyledCustomButton.defaultProps = {\n  theme: {\n    secondary: '#fff'\n  }\n};\n\nexport default StyledCustomButton;\n","import React, { useRef } from 'react';\nimport CustomButton from '../CustomButton/CustomButton.component';\nimport { TimelineLite } from 'gsap';\n\nconst MenuButton = ({ onClick, ...props }) => {\n  const button = useRef(null);\n  const myTimeline = new TimelineLite();\n\n  const handleClick = e => {\n    myTimeline\n      .to(button.current, {\n        duration: 0.1,\n        ease: 'power3.out',\n        transform: 'scale(0.75)'\n      })\n      .to(button.current, {\n        duration: 0.2,\n        ease: 'back.out(3)',\n        transform: 'scale(1.0)'\n      })\n      .to(button.current, {\n        duration: 0.2,\n        transform: 'scale(1.0)',\n        onComplete: () => onClick(e)\n      });\n  };\n\n  return (\n    <CustomButton ref={button} onClick={handleClick} {...props}></CustomButton>\n  );\n};\n\nexport default MenuButton;\n","import React from 'react';\nimport MenuButton from '../../MenuButton/MenuButton.component';\nimport Score from '../../Score/Score.component';\nimport Particles from 'react-particles-js';\nimport particlesConfig from '../particlesjs-config.json';\n\nconst Over = React.memo(({ score, restartGame }) => {\n  return (\n    <div className='app over'>\n      <Particles\n        style={{ position: 'absolute', left: '0', top: '0' }}\n        params={particlesConfig}\n      />\n      <Score className='large' score={score} />\n      <MenuButton onClick={restartGame} className='button-restart'>\n        RESTART\n      </MenuButton>\n    </div>\n  );\n});\n\nexport default Over;\n","import React from 'react';\nimport MenuButton from '../../MenuButton/MenuButton.component';\nimport Particles from 'react-particles-js';\nimport particlesConfig from '../particlesjs-config.json';\n\nconst Intro = React.memo(({ startGame }) => {\n  return (\n    <div className='app intro'>\n      <Particles params={particlesConfig} />\n      <h1 className='main-title'>MATH KIDS</h1>\n      <MenuButton onClick={startGame} className='button-start'>\n        START\n      </MenuButton>\n    </div>\n  );\n});\n\nIntro.displayName = 'Intro';\n\nexport default Intro;\n","import React from 'react';\nimport CustomButton from '../../CustomButton/CustomButton.component';\n\nconst Intro = ({ startGame }) => {\n  return (\n    <div className='app error'>\n      <h1 className='main-title'>MATH KIDS</h1>\n      <p className='error'>Something bad happened!</p>\n      <CustomButton onClick={startGame} className='button-start'>\n        RESTART\n      </CustomButton>\n    </div>\n  );\n};\n\nexport default Intro;\n","import React, { useRef, useState, useEffect, useMemo } from 'react';\nimport CustomButton from '../CustomButton/CustomButton.component';\nimport styled from 'styled-components';\nimport { TimelineLite } from 'gsap';\n\nconst buttonStates = Object.freeze({\n  ready: 'ready',\n  clicked: 'clicked'\n});\n\nconst GameButton = ({\n  onClickStart,\n  onClickComplete,\n  enabled,\n  effect,\n  ...props\n}) => {\n  const [state, setState] = useState(buttonStates.ready);\n\n  const gbref = useRef(null);\n\n  const clickTimeline = useMemo(() => new TimelineLite({ paused: true }), []);\n\n  console.log('timeline defined');\n\n  useEffect(() => {\n    console.log('gb timeline adjusted');\n\n    clickTimeline\n      .addLabel('success')\n      .to(gbref.current, {\n        duration: 0.1,\n        ease: 'power3.out',\n        transform: 'scale(0.75)'\n      })\n      .to(gbref.current, {\n        duration: 0.2,\n        ease: 'back.out(3)',\n        transform: 'scale(1.0)'\n      })\n      .to(gbref.current, {\n        duration: 0.5,\n        delay: 0.2,\n        ease: 'power3.out',\n        rotation: '+=360'\n      })\n      .call(\n        tl => {\n          console.log('fail skip reached');\n          tl.play('over');\n        },\n        [clickTimeline]\n      )\n      .addLabel('fail', '+=0.1')\n      .to(\n        gbref.current,\n        {\n          duration: 0.03,\n          x: '+=4',\n          yoyo: true,\n          repeat: 13\n        },\n        'fail'\n      )\n      .addLabel('over')\n      .call(() => console.log('over reached'), [])\n      .set(gbref.current, { x: '0', rotation: '0' }, 'over+=0.2');\n    /*\n      .addPause('fail', () => {\n        console.log('onpause');\n        clickTimeline.play('over');\n      });*/\n\n    return () => {\n      console.log('bg cleanup');\n      clickTimeline.kill();\n    };\n  }, []);\n\n  const handleClick = e => {\n    if (enabled && state === buttonStates.ready) {\n      console.log('gb clicked');\n      setState(buttonStates.clicked);\n\n      clickTimeline.eventCallback('onComplete', () => {\n        onClickComplete(e);\n        setState(buttonStates.ready);\n      });\n\n      //clickTimeline.restart();\n\n      console.log('effect', effect);\n      //clickTimeline.seek(effect);\n      clickTimeline.play(effect);\n\n      onClickStart(e);\n    }\n  };\n\n  return (\n    <CustomButton ref={gbref} onClick={handleClick} {...props}></CustomButton>\n  );\n};\n\nconst StyledGameButton = styled(GameButton)`\n  padding: 1rem 1.5rem;\n  margin: 0rem;\n\n  &:focus {\n    box-shadow: none;\n  }\n`;\n\nexport default StyledGameButton;\n","import React, { Fragment } from 'react';\nimport GameButton from '../GameButton/GameButton.component';\n\nimport './Problem.styles.scss';\n\nconst Problem = React.memo(\n  ({\n    stopRound,\n    checkAnswer,\n    finishRound,\n    buttonsEnabled,\n    problemSpec: { problem, correctAnswer, answers }\n  }) => {\n    const createButtons = (correctAnswer, answers) => {\n      // create buttons\n      const buttons = answers.map((x, i) => (\n        <GameButton\n          key={i}\n          onClickStart={stopRound}\n          onClickComplete={\n            x === correctAnswer\n              ? () => checkAnswer({ answer: x, correct: true })\n              : () => checkAnswer({ answer: x, correct: false })\n          }\n          enabled={buttonsEnabled}\n          effect={x === correctAnswer ? 'success' : 'fail'}>\n          {x}\n        </GameButton>\n      ));\n\n      return buttons;\n    };\n\n    return (\n      <Fragment>\n        <div className='problem'>{problem} = </div>\n        <div className='answer-container'>\n          {createButtons(correctAnswer, answers)}\n        </div>\n      </Fragment>\n    );\n  }\n);\n\nProblem.displayName = 'Problem';\n\nexport default Problem;\n","import React, { useState, useEffect } from 'react';\nimport Game from './AppStates/Game.appState';\nimport Over from './AppStates/Over.appState';\nimport Intro from './AppStates/Intro.appSate';\nimport Error from './AppStates/Error.appSate';\nimport Problem from '../Problem/Problem.component';\nimport {\n  store,\n  gameStates,\n  startGame,\n  restartGame,\n  startRound,\n  stopRound,\n  finishRound,\n  initRound,\n  checkAnswer,\n  roundStates\n} from './store';\n\nimport './App.scss';\n\n/*** App component ***/\n\nconst App = () => {\n  const [state, setState] = useState(store.getState());\n\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => setState(store.getState()));\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  const { score, scoreUnit, roundState, gameState, problemSpec } = state;\n\n  const buttonsEnabled = roundState === roundStates.running;\n\n  const problem = (\n    <Problem\n      {...{ buttonsEnabled, problemSpec, stopRound, checkAnswer, finishRound }}\n    />\n  );\n\n  const renderContent = () => {\n    switch (state.gameState) {\n      case gameStates.intro:\n        return <Intro {...{ startGame }} />;\n      case gameStates.game:\n        return (\n          <Game\n            score={score}\n            scoreUnit={scoreUnit}\n            roundState={roundState}\n            gameState={gameState}\n            problem={problem}\n            startRound={startRound}\n            finishRound={finishRound}\n            initRound={initRound}\n          />\n        );\n      case gameStates.over:\n        return <Over {...{ restartGame, score }} />;\n      default:\n        return <Error {...{ startGame }} />;\n    }\n  };\n\n  return renderContent();\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const theme = {\n  primary: '#3982c1', // blue\n  secondary: '#FF69B4', // hotpink\n  bacground: '#c4f2ff', // light blue\n  onPrimary: '#ffffff',\n  onSecondary: '#ffffff',\n  onBackground: '#000000'\n};\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}